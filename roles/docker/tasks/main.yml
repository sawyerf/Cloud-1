---
- name: Create Network
  community.docker.docker_network:
    name: '{{ network_name }}'

- name: Deploy Wordpress
  community.docker.docker_container:
    name: '{{ wp_name }}'
    image: wordpress:latest
    ports:
      - "8080:80"
    networks:
      - name: '{{ network_name }}'
    env:
      WORDPRESS_DB_HOST: '{{ ddb_name }}'
      WORDPRESS_DB_NAME: '{{ db_name }}'
      WORDPRESS_DB_USER: '{{ db_user }}'
      WORDPRESS_DB_PASSWORD: '{{ db_pass }}'

- name: Deploy MYSQL
  community.docker.docker_container:
    name: '{{ ddb_name }}'
    image: mysql:latest
    networks:
      - name: '{{ network_name }}'
    env:
      MYSQL_DATABASE: '{{ db_name }}'
      MYSQL_USER: '{{ db_user }}'
      MYSQL_PASSWORD: '{{ db_pass }}'
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    restart_policy: always

- name: Deploy PHPMyAdmin
  community.docker.docker_container:
    name: '{{ pma_name }}'
    image: phpmyadmin
    ports:
      - 8081:80
    networks:
      - name: '{{ network_name }}'
    env:
      PMA_HOST: '{{ ddb_name }}'
      PMA_USER: '{{ db_user }}'
      PMA_PASSWORD: '{{ db_pass }}'

- name: Stop Service Nginx
  service:
    name: nginx
    state: stopped
    enabled: no

- name: Copy Configuration file Nginx
  template:
    src: templates/site.conf.j2
    dest: /root/site.conf
    # dest: /etc/nginx/sites-enabled/default

# - name: Restart Nginx
#   service:
#     name: nginx
#     state: restarted

- name: Deploy Nginx
  community.docker.docker_container:
    name: Nginx
    image: nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - name: '{{ network_name }}'
    volumes:
      - '/root/site.conf:/etc/nginx/conf.d/default.conf'